# This workflow deploys the FastAPI backend to the lambda function in AWS
#   whenever the master branch is pushed to.

name: Deploy API

on:
  push:
    branches:
      - master
    paths:
      - "backend/**"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      # Installed to local folder so it can be zipped with source code
      - name: Package dependencies
        working-directory: backend/
        run: |
          poetry export -f requirements.txt --output requirements_from_poetry.txt --without-hashes
          pip install --upgrade pip setuptools wheel
          pip install \
          --platform manylinux2014_x86_64 \
          --target=../backend_deps \
          --implementation cp \
          --python-version 3.12 \
          --only-binary=:all: --upgrade \
          --index https://pypi.org/simple/ \
          -r requirements_from_poetry.txt
      - name: Zip dependencies with source code
        working-directory: ./
        run: |
          cd backend_deps
          zip -r $GITHUB_WORKSPACE/api_lambda.zip .
          cd ../backend 
          zip -g $GITHUB_WORKSPACE/api_lambda.zip -r plant_api
      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: ./
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws lambda update-function-code \
          --region us-west-2 \
          --zip-file fileb://api_lambda.zip \
          --function-name new-plant-app
